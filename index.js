(()=>{(function(){"use strict";function f(e,r,c){var s,t;const n=e[r];return n?c>=((s=n.min)!=null?s:0)&&c<=((t=n.max)!=null?t:1/0):!0}const u=new WeakMap;function l(e){if(u.has(e))return u.get(e);const{constraints:r,cwidth:c}=e;return u.set(e,new Proxy(e,{get(n,s){return s==="fieldsets"?Object.fromEntries(Object.entries(n.fieldsets).filter(([t])=>f(r,t,c))):n[s]}})).get(e)}panel.plugin("rasteiner/conditionalblocks",{use:[function(e){const r=e.component("k-layout-field").options,c=e.component("k-layout-column").options,n=e.component("k-blocks").options;r.provide=function(){return{constraints:this.requires&&!Array.isArray(this.requires)?this.requires:{}}},r.props.requires={type:Object|Array,required:!1},c.provide=function(){const[t,i]=this.width.split("/");return{cwidth:parseInt(t)/parseInt(i)}},n.inject={constraints:{from:"constraints",default:{}},cwidth:{from:"cwidth",default:null}};for(const t of["choose","chooseToConvert"]){const i=n.methods[t];n.methods[t]=function(...o){if(Object.entries(this.constraints).length>0&&this.cwidth){const a=l(this);Reflect.apply(i,a,o)}else Reflect.apply(i,this,o)}}n.methods.canAcceptBlockType=function(t){return!t in this.fieldsets?!1:!t in this.constraints?!0:f(this.constraints,t,this.cwidth)};const s=n.methods.move;n.methods.move=function(t){var i;if(Reflect.apply(s,this,arguments)){let o=t.relatedContext.component;for(;o&&!o.canAcceptBlockType;)o=o.$parent;const a=t.draggedContext.element;return(i=o==null?void 0:o.canAcceptBlockType(a.type))!=null?i:!1}return!1}}]})})();})();
